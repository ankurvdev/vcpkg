From 48beca4e7635cf2031c6707042d623c4daf44778 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Morten=20S=C3=B8rvig?= <morten.sorvig@qt.io>
Date: Wed, 14 Aug 2024 16:18:45 +0200
Subject: [PATCH] wasm: fix compile error due to EM_BOOL type change

emsdk 3.1.62 changes the EM_BOOL type from int to  bool. We were
using int in two places in the wasm platform plugin.

Use EM_BOOL instead to stay compatible with emsdk editions earlier
and and later than 3.1.62

Pick-to: 6.8 6.7
Change-Id: I837e76f869225859643dd5a98a28a1eefb5f14a4
Reviewed-by: Lorn Potter <lorn.potter@gmail.com>
Reviewed-by: Even Oscar Andersen <even.oscar.andersen@qt.io>
---
 src/plugins/platforms/wasm/qwasmcompositor.cpp  | 4 ++--
 src/plugins/platforms/wasm/qwasmintegration.cpp | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/plugins/platforms/wasm/qwasmcompositor.cpp b/src/plugins/platforms/wasm/qwasmcompositor.cpp
index c534cce9ef5..dfac0e0b88e 100644
--- a/src/plugins/platforms/wasm/qwasmcompositor.cpp
+++ b/src/plugins/platforms/wasm/qwasmcompositor.cpp
@@ -86,7 +86,7 @@ void QWasmCompositor::requestUpdate()
    if (m_requestAnimationFrameId != -1)
        return;

-    static auto frame = [](double frameTime, void *context) -> int {
+    static auto frame = [](double frameTime, void *context) -> EM_BOOL {
         Q_UNUSED(frameTime);
 
         QWasmCompositor *compositor = reinterpret_cast<QWasmCompositor *>(context);
@@ -94,7 +94,7 @@ void QWasmCompositor::requestUpdate()
         compositor->m_requestAnimationFrameId = -1;
         compositor->deliverUpdateRequests();
 
-        return 0;
+        return EM_FALSE;
     };
     m_requestAnimationFrameId = emscripten_request_animation_frame(frame, this);
 }
diff --git a/src/plugins/platforms/wasm/qwasmintegration.cpp b/src/plugins/platforms/wasm/qwasmintegration.cpp
index e4373749d82..a1129f54e31 100644
--- a/src/plugins/platforms/wasm/qwasmintegration.cpp
+++ b/src/plugins/platforms/wasm/qwasmintegration.cpp
@@ -126,14 +126,14 @@ QWasmIntegration::QWasmIntegration()
 
     // install browser window resize handler
     emscripten_set_resize_callback(EMSCRIPTEN_EVENT_TARGET_WINDOW, nullptr, EM_TRUE,
-                                   [](int, const EmscriptenUiEvent *, void *) -> int {
+                                   [](int, const EmscriptenUiEvent *, void *) -> EM_BOOL {
                                        // This resize event is called when the HTML window is
                                        // resized. Depending on the page layout the elements might
                                        // also have been resized, so we update the Qt screen sizes
                                        // (and canvas render sizes).
                                        if (QWasmIntegration *integration = QWasmIntegration::get())
                                            integration->resizeAllScreens();
-                                       return 0;
+                                       return EM_FALSE;
                                    });
 
     // install visualViewport resize handler which picks up size and scale change on mobile.
